# Generated by Django 5.0.7 on 2024-07-22 10:06

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Admin_additional_info",
            fields=[
                (
                    "phone_number",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("email", models.EmailField(max_length=256)),
                ("aadhar_number", models.CharField(max_length=12)),
                ("years_experience", models.IntegerField(blank=True, default=0)),
                ("upload_photo", models.ImageField(upload_to="admin/dp")),
                ("upload_aadhar", models.ImageField(upload_to="admin/aadhar")),
                ("occupation", models.CharField(blank=True, max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("message", models.CharField(max_length=256)),
                ("image", models.ImageField(upload_to="static/index/feedback")),
            ],
        ),
        migrations.CreateModel(
            name="Index_page_info",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=128)),
                ("description", models.CharField(max_length=256)),
                ("image", models.ImageField(upload_to="static/index/info")),
            ],
        ),
        migrations.CreateModel(
            name="Requirements",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("rf", "RAW VEGETABLES/ RAW FRUITS"),
                            ("rs", "RAW SOLIDS"),
                            ("wa", "WATER"),
                            ("da", "DAIRY"),
                            ("cl", "CLOTHES"),
                            ("me", "MEDICINES"),
                            ("sh", "SHELTER ITEMS"),
                        ],
                        max_length=2,
                    ),
                ),
                ("item", models.CharField(max_length=100)),
                ("quantity", models.IntegerField()),
                ("location", models.CharField(max_length=256)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pn", "PENDING"),
                            ("ac", "ACCEPTED"),
                            ("re", "RECEIVED"),
                        ],
                        max_length=2,
                    ),
                ),
                ("satisfied_by", models.CharField(blank=True, max_length=10)),
                ("expiration_date", models.DateField()),
                ("satisfied_date", models.DateField(blank=True, null=True)),
                ("needed_date", models.DateField()),
                ("admin_id", models.CharField(max_length=10)),
                ("current_location", models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name="Temp_admin_save",
            fields=[
                (
                    "phone_number",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("upload_photo", models.ImageField(upload_to="admin/dp")),
                ("upload_aadhar", models.ImageField(upload_to="admin/aadhar")),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("phone_number", models.CharField(max_length=10, unique=True)),
                (
                    "email",
                    models.EmailField(
                        max_length=100, null=True, unique=True, verbose_name="Email"
                    ),
                ),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                (
                    "user_type",
                    models.CharField(
                        choices=[("ad", "ADMIN"), ("vc", "VICTIM"), ("us", "USER")],
                        default="us",
                        max_length=2,
                    ),
                ),
                ("location", models.CharField(blank=True, max_length=256, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
    ]
